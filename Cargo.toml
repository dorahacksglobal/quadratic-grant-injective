[package]
name = "quadratic-grant"
version = "0.1.0"
authors = ["noodles <xiongty@outlook.com>"]
edition = "2021"

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
codegen-units = 1
panic = 'abort'
incremental = false
overflow-checks = true

[features]
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
# use library feature to disable all instantiate/execute/query exports
library = []

[package.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/rust-optimizer-arm64:0.12.11
"""
check = """cosmwasm-check "$(pwd)"/artifacts/quadratic_grant-aarch64.wasm"""
install_injectived = """docker run --name="injective-core-staging" \
  -v="$(pwd)"/artifacts:/var/artifacts \
  --entrypoint=sh public.ecr.aws/l9h3g6c6/injective-core:staging \
  -c "tail -F anything"
"""
injectived = "docker exec -it injective-core-staging sh"

[dependencies]
cosmwasm-schema = "1.5.3"
cosmwasm-std = { version = "1.5.3", features = ["cosmwasm_1_3"] }
cosmwasm-storage = "1.5.2"
cw-storage-plus = "1.2.0"
cw2 = "1.1.2"
schemars = "0.8.16"
serde = { version = "1.0.145", default-features = false, features = ["derive"] }
thiserror = { version = "1.0.31" }
sylvia = "0.9.3"
cw-utils = "1.0.1"
tiny-keccak = { version = "2.0.2", features = ["keccak"] }
hex = "0.4.3"

[dev-dependencies]
cw-multi-test = "0.20.0"
anyhow = "1"
